@page "/heroes"
@using MarvelHerores.Components;

@inject IMarvelService<Hero> service;
@inject IJSRuntime JS;
@inject IConfiguration configuration;

<PageTitle>Heroes</PageTitle>

<PageHeader HeaderString="Heroes Page" />
@if (_heroes != null)
{
    <CharacterCard Characters="@_heroes.data.results" />
}
else
{
    <p>loading...</p>
}

@code {

    private Hero? _heroes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (_heroes is null)
        {
            _heroes = await GetHeroes();
        }
    }

    private async Task<Hero> GetHeroes()
    {
        try
        {
            var parameters = await JS.InvokeAsync<DTO.EmpointParametersDTO>("GetTs", new { privateKey = configuration["ApiPrivateKey"], publicKey = configuration["ApiPublicKey"] });
            var heroes = await service.GetAllAsync(parameters.Ts, parameters.Pkey, parameters.Hash);
            await JS.InvokeVoidAsync("console.log", heroes);
            return heroes;
        }
        catch (Exception e)
        {
            throw;
        }
    }
}
